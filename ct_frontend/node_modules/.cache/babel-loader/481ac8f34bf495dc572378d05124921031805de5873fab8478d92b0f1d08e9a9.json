{"ast":null,"code":"var _jsxFileName = \"E:\\\\Contest-Tracker\\\\frontend\\\\src\\\\pages\\\\PastContests.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"./PastContests.css\"; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PastContests = () => {\n  _s();\n  const [pastContests, setPastContests] = useState([]);\n  useEffect(() => {\n    const fetchContests = async () => {\n      try {\n        const response = await axios.get('https://codeforces.com/api/contest.list');\n        const contests = response.data.result;\n        const currentTime = Math.floor(Date.now() / 1000);\n\n        // Filter past contests and map to desired format\n        const pastContestsData = contests.filter(contest => contest.startTimeSeconds < currentTime).slice(0, 20) // Limit to 20 past contests\n        .map(contest => ({\n          id: contest.id,\n          name: contest.name,\n          startTime: new Date(contest.startTimeSeconds * 1000),\n          duration: contest.durationSeconds / 3600,\n          // Convert duration to hours\n          link: `https://codeforces.com/contest/${contest.id}`\n        }));\n        setPastContests(pastContestsData);\n      } catch (error) {\n        console.error('Error fetching contests:', error);\n      }\n    };\n    fetchContests();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Past Contests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pastContests.map(contest => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: contest.link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: contest.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start Time: \", contest.startTime.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Duration: \", contest.duration, \" hours\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, contest.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(PastContests, \"FDcp6nTLQnpkbezOEdULLN/jdks=\");\n_c = PastContests;\nexport default PastContests;\nvar _c;\n$RefreshReg$(_c, \"PastContests\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PastContests","_s","pastContests","setPastContests","fetchContests","response","get","contests","data","result","currentTime","Math","floor","Date","now","pastContestsData","filter","contest","startTimeSeconds","slice","map","id","name","startTime","duration","durationSeconds","link","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","toLocaleString","_c","$RefreshReg$"],"sources":["E:/Contest-Tracker/frontend/src/pages/PastContests.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport \"./PastContests.css\"; // Import your CSS file\r\n\r\nconst PastContests = () => {\r\n  const [pastContests, setPastContests] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchContests = async () => {\r\n      try {\r\n        const response = await axios.get('https://codeforces.com/api/contest.list');\r\n        const contests = response.data.result;\r\n        const currentTime = Math.floor(Date.now() / 1000);\r\n\r\n        // Filter past contests and map to desired format\r\n        const pastContestsData = contests\r\n          .filter(contest => contest.startTimeSeconds < currentTime)\r\n          .slice(0, 20) // Limit to 20 past contests\r\n          .map(contest => ({\r\n            id: contest.id,\r\n            name: contest.name,\r\n            startTime: new Date(contest.startTimeSeconds * 1000),\r\n            duration: contest.durationSeconds / 3600, // Convert duration to hours\r\n            link: `https://codeforces.com/contest/${contest.id}`\r\n          }));\r\n\r\n        setPastContests(pastContestsData);\r\n      } catch (error) {\r\n        console.error('Error fetching contests:', error);\r\n      }\r\n    };\r\n\r\n    fetchContests();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Past Contests</h2>\r\n      <ul>\r\n        {pastContests.map(contest => (\r\n          <li key={contest.id}>\r\n            <a href={contest.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {contest.name}\r\n            </a>\r\n            <p>Start Time: {contest.startTime.toLocaleString()}</p>\r\n            <p>Duration: {contest.duration} hours</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PastContests;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}