{"ast":null,"code":"var _jsxFileName = \"E:\\\\Contest-Tracker\\\\frontend\\\\src\\\\pages\\\\PastContests.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PastContests = () => {\n  _s();\n  const [pastContests, setPastContests] = useState([]);\n  useEffect(() => {\n    const fetchPastContests = async () => {\n      try {\n        const response = await axios.get(\"https://kontests.net/api/contests/fetch\");\n        const past = response.data.filter(contest => new Date(contest.end_time) < new Date());\n        setPastContests(past);\n      } catch (error) {\n        console.error(\"Error fetching contests:\", error);\n      }\n    };\n    fetchPastContests();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Past Contests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pastContests.map(contest => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: contest.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: contest.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), \" - \", new Date(contest.end_time).toLocaleString()]\n      }, contest.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(PastContests, \"FDcp6nTLQnpkbezOEdULLN/jdks=\");\n_c = PastContests;\nexport default PastContests;\nvar _c;\n$RefreshReg$(_c, \"PastContests\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","PastContests","_s","pastContests","setPastContests","fetchPastContests","response","get","past","data","filter","contest","Date","end_time","error","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","map","href","url","target","rel","name","toLocaleString","_c","$RefreshReg$"],"sources":["E:/Contest-Tracker/frontend/src/pages/PastContests.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst PastContests = () => {\r\n  const [pastContests, setPastContests] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPastContests = async () => {\r\n      try {\r\n        const response = await axios.get(\"https://kontests.net/api/contests/fetch\");\r\n        const past = response.data.filter(contest => new Date(contest.end_time) < new Date());\r\n        setPastContests(past);\r\n      } catch (error) {\r\n        console.error(\"Error fetching contests:\", error);\r\n      }\r\n    };\r\n    \r\n    fetchPastContests();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>Past Contests</h2>\r\n      <ul>\r\n        {pastContests.map(contest => (\r\n          <li key={contest.name}>\r\n            <a href={contest.url} target=\"_blank\" rel=\"noopener noreferrer\">{contest.name}</a> - {new Date(contest.end_time).toLocaleString()}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PastContests;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMQ,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,yCAAyC,CAAC;QAC3E,MAAMC,IAAI,GAAGF,QAAQ,CAACG,IAAI,CAACC,MAAM,CAACC,OAAO,IAAI,IAAIC,IAAI,CAACD,OAAO,CAACE,QAAQ,CAAC,GAAG,IAAID,IAAI,CAAC,CAAC,CAAC;QACrFR,eAAe,CAACI,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDT,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKgB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BlB,OAAA;MAAAkB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBtB,OAAA;MAAAkB,QAAA,EACGf,YAAY,CAACoB,GAAG,CAACZ,OAAO,iBACvBX,OAAA;QAAAkB,QAAA,gBACElB,OAAA;UAAGwB,IAAI,EAAEb,OAAO,CAACc,GAAI;UAACC,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAT,QAAA,EAAEP,OAAO,CAACiB;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,OAAG,EAAC,IAAIV,IAAI,CAACD,OAAO,CAACE,QAAQ,CAAC,CAACgB,cAAc,CAAC,CAAC;MAAA,GAD1HlB,OAAO,CAACiB,IAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACpB,EAAA,CA7BID,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}