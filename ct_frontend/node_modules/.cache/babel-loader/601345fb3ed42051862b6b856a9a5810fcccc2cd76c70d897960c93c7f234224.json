{"ast":null,"code":"var _jsxFileName = \"E:\\\\Contest-Tracker\\\\frontend\\\\src\\\\pages\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Admin.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const [contestName, setContestName] = useState('');\n  const [youtubeLink, setYoutubeLink] = useState('');\n  const [contests, setContests] = useState([]); // State to hold the list of contests\n  const [errors, setErrors] = useState({});\n  const validateForm = () => {\n    const errors = {};\n    if (!contestName.trim()) {\n      errors.contestName = 'Contest name is required.';\n    }\n    const youtubeRegex = /^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.be)\\/.+$/;\n    if (!youtubeLink.trim()) {\n      errors.youtubeLink = 'YouTube link is required.';\n    } else if (!youtubeRegex.test(youtubeLink)) {\n      errors.youtubeLink = 'Please enter a valid YouTube URL.';\n    }\n    return errors;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const validationErrors = validateForm();\n    if (Object.keys(validationErrors).length === 0) {\n      const newContest = {\n        name: contestName,\n        link: youtubeLink\n      };\n      setContests([...contests, newContest]); // Add new contest to the list\n      alert('YouTube link added successfully!');\n      setContestName('');\n      setYoutubeLink('');\n      setErrors({});\n    } else {\n      setErrors(validationErrors);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Panel - Add Contest Solution Links\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"admin-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"contestName\",\n          children: \"Contest Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"contestName\",\n          value: contestName,\n          onChange: e => setContestName(e.target.value),\n          className: errors.contestName ? 'input-error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), errors.contestName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: errors.contestName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"youtubeLink\",\n          children: \"YouTube Link:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"youtubeLink\",\n          value: youtubeLink,\n          onChange: e => setYoutubeLink(e.target.value),\n          className: errors.youtubeLink ? 'input-error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), errors.youtubeLink && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: errors.youtubeLink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), contests.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contest-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Submitted Contests:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: contests.map((contest, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: contest.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), \": \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: contest.link,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: contest.link\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 50\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Admin, \"5GQjNvuzIzJvKmJDMTO7P+8uxY8=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Admin","_s","contestName","setContestName","youtubeLink","setYoutubeLink","contests","setContests","errors","setErrors","validateForm","trim","youtubeRegex","test","handleSubmit","e","preventDefault","validationErrors","Object","keys","length","newContest","name","link","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","map","contest","index","href","rel","_c","$RefreshReg$"],"sources":["E:/Contest-Tracker/frontend/src/pages/Admin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Admin.css'; // Import the CSS file for styling\r\n\r\nconst Admin = () => {\r\n  const [contestName, setContestName] = useState('');\r\n  const [youtubeLink, setYoutubeLink] = useState('');\r\n  const [contests, setContests] = useState([]); // State to hold the list of contests\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateForm = () => {\r\n    const errors = {};\r\n    if (!contestName.trim()) {\r\n      errors.contestName = 'Contest name is required.';\r\n    }\r\n    const youtubeRegex = /^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.be)\\/.+$/;\r\n    if (!youtubeLink.trim()) {\r\n      errors.youtubeLink = 'YouTube link is required.';\r\n    } else if (!youtubeRegex.test(youtubeLink)) {\r\n      errors.youtubeLink = 'Please enter a valid YouTube URL.';\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const validationErrors = validateForm();\r\n    if (Object.keys(validationErrors).length === 0) {\r\n      const newContest = { name: contestName, link: youtubeLink };\r\n      setContests([...contests, newContest]); // Add new contest to the list\r\n      alert('YouTube link added successfully!');\r\n      setContestName('');\r\n      setYoutubeLink('');\r\n      setErrors({});\r\n    } else {\r\n      setErrors(validationErrors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h2>Admin Panel - Add Contest Solution Links</h2>\r\n      <form onSubmit={handleSubmit} className=\"admin-form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"contestName\">Contest Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"contestName\"\r\n            value={contestName}\r\n            onChange={(e) => setContestName(e.target.value)}\r\n            className={errors.contestName ? 'input-error' : ''}\r\n          />\r\n          {errors.contestName && (\r\n            <span className=\"error-message\">{errors.contestName}</span>\r\n          )}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"youtubeLink\">YouTube Link:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"youtubeLink\"\r\n            value={youtubeLink}\r\n            onChange={(e) => setYoutubeLink(e.target.value)}\r\n            className={errors.youtubeLink ? 'input-error' : ''}\r\n          />\r\n          {errors.youtubeLink && (\r\n            <span className=\"error-message\">{errors.youtubeLink}</span>\r\n          )}\r\n        </div>\r\n        <button type=\"submit\" className=\"submit-button\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n\r\n      {/* Display the list of contests */}\r\n      {contests.length > 0 && (\r\n        <div className=\"contest-list\">\r\n          <h3>Submitted Contests:</h3>\r\n          <ul>\r\n            {contests.map((contest, index) => (\r\n              <li key={index}>\r\n                <strong>{contest.name}</strong>: <a href={contest.link} target=\"_blank\" rel=\"noopener noreferrer\">{contest.link}</a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}